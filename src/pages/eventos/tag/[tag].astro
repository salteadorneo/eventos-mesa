---
import { type CollectionEntry, getCollection, render } from "astro:content";
import Layout from "@/layouts/Layout.astro";
import Header from "@/components/Header.astro";
import Footer from "@/components/Footer.astro";
import { slugify } from "@/utils";
import List from "@/components/List.astro";
import Filter from "@/components/Filter.astro";
import Title from "@/components/Title.astro";

export async function getStaticPaths() {
    const events = await getCollection("event");
    const tags = new Set<string>();
    events.forEach((event: CollectionEntry<"event">) => {
        event.data.tags?.forEach((tag) => {
            if (tag) tags.add(tag);
        });
    });
    return Array.from(tags).map((tag) => ({
        params: { tag: slugify(tag) },
        props: { tag },
    }));
}

const { tag } = Astro.props;

const events = await getCollection(
    "event",
    ({ data }) =>
        data.tags &&
        data.tags.some((t) => t && Astro.params.tag.match(slugify(t))),
);

const futures = events
    .filter((event) => event.data.start > new Date())
    .sort((a, b) => a.data.start.getTime() - b.data.start.getTime());
const past = events
    .filter((event) => event.data.start <= new Date())
    .sort((a, b) => b.data.start.getTime() - a.data.start.getTime());
---

<Layout>
    <Header />
    <main class="flex-1">
        <Title title={`Etiqueta: ${tag}`} />
        <section class="w-full max-w-6xl mx-auto px-4 py-6">
            <h2 class="text-3xl mb-4">Próximos eventos de {tag}</h2>
            {
                futures.length === 0 && (
                    <p class="text-gray-500">No hay próximos eventos.</p>
                )
            }
            <List events={futures} />
            <h2 class="text-3xl mb-4 mt-12">Eventos pasados de {tag}</h2>
            {
                past.length === 0 && (
                    <p class="text-gray-500">No hay eventos pasados.</p>
                )
            }
            <List events={past} />
        </section>
    </main>
    <Footer />
</Layout>
