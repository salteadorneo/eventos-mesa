---
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import Header from "../components/Header.astro";
import Layout from "./Layout.astro";
import { AddToCalendarButton } from 'add-to-calendar-button-react';

type Props = CollectionEntry<"event">["data"];

const { title, start, end,startTime,endTime, updatedDate, image, location, color } = Astro.props;

const API_KEY = "AIzaSyAsvWUikM_4YkcsTWBjWMPFK6-jXe7iVAs";
---

<Layout>
    <Header color={color} />
    <main>
        <article>
            <div
                class="relative flex items-end py-6 min-h-[300px] bg-primary bg-center bg-cover bg-no-repeat"
                style={`background-image: url(${image})`}
            >
                <div
                    class={`absolute inset-0 ${image && "bg-black! opacity-30"}`}
                    style={`background-color: ${color};`}
                >
                </div>
                <div class="container mx-auto px-4">
                    <div
                        class="text-xl text-white drop-shadow-[0_1px_4px_rgba(0,0,0,0.8)]"
                    >
                        <FormattedDate date={start} />
                        {
                            end && (
                                <>
                                    al <FormattedDate date={end} />
                                </>
                            )
                        }
                        {
                            updatedDate && (
                                <div class="last-updated-on">
                                    Last updated on{" "}
                                    <FormattedDate date={updatedDate} />
                                </div>
                            )
                        }
                    </div>
                    <h1
                        class="text-5xl md:text-6xl text-balance text-white drop-shadow-[0_1px_4px_rgba(0,0,0,0.8)]"
                    >
                        {title}
                    </h1>
                </div>
            </div>
            <div class="container mx-auto py-8 px-4 space-y-4">
                <slot />
            </div>
            <section class="flex flex-wrap items-center justify-center gap-2 mb-6">
                 <button
                    class="flex items-center gap-2 bg-primary text-white font-bold px-4 py-3 rounded hover:bg-secondary transition-colors"
                    onclick={`navigator.share({ title: '${title}', url: window.location.href })`}
                >
                    <svg xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-share"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M6 12m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" /><path d="M18 6m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" /><path d="M18 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" /><path d="M8.7 10.7l6.6 -3.4" /><path d="M8.7 13.3l6.6 3.4" /></svg>
                    Compartir
                </button>

                <AddToCalendarButton
                    client:only
                    label="AÃ±adir al calendario"
                    name={title}
                    options="'Apple','Google','iCal','Outlook.com','Yahoo'"
                    location={location}
                    startDate={start.toISOString().split("T")[0]}
                    endDate={end?.toISOString().split("T")[0]}
                    startTime={startTime}
                    endTime={endTime}
                    timeZone="Europe/Madrid"
                />
            </section>
            {
                location && (
                    <iframe
                        width="100%"
                        class="h-96"
                        loading="lazy"
                        allowfullscreen
                        referrerpolicy="no-referrer-when-downgrade"
                        src={`https://www.google.com/maps/embed/v1/place?key=${API_KEY}&q=${encodeURIComponent(location)}`}
                    />
                )
            }
        </article>
    </main>
    <Footer />
</Layout>

<style is:inline define:vars={{ color }}>
    a {
        color: var(--color, --color-primary)
        text-decoration: underline;
    }
</style>
