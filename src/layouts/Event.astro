---
import type { CollectionEntry } from "astro:content";
import Footer from "@/components/Footer.astro";
import Dates from "@/components/Dates.astro";
import Header from "@/components/Header.astro";
import Layout from "./Layout.astro";
import { AddToCalendarButton } from "add-to-calendar-button-react";

type Props = CollectionEntry<"event">;

const {
    id,
    data: {
        title,
        description,
        start,
        end,
        startTime,
        endTime,
        image,
        location,
        color,
        url,
        email,
    },
} = Astro.props;

const API_KEY = "AIzaSyAsvWUikM_4YkcsTWBjWMPFK6-jXe7iVAs";
---

<Layout title={`${title} Â· Agendados`} description={description}>
    <Header color={color} />
    <main>
        <article>
            <div
                class="flex items-end py-6 bg-primary bg-center bg-cover bg-no-repeat"
                style={`background-color: ${color};`}
            >
                <div class="relative w-full max-w-6xl mx-auto px-4">
                    {
                        image && (
                            <div class="sm:absolute top-0 right-6 z-50 w-48 sm:perspective-dramatic max-sm:mb-6">
                                <img
                                    src={image.toString()}
                                    alt={title}
                                    class="-rotate-y-6"
                                />
                            </div>
                        )
                    }
                    {
                        !image && (
                            <div class="max-sm:hidden sm:absolute -bottom-16 right-6 z-50 w-48 sm:perspective-dramatic max-sm:mb-6">
                                <div class="size-48 grid place-content-center">
                                    <div
                                        class="invert h-36 aspect-[1/1.1547] [clip-path:polygon(50%_0%,100%_25%,100%_75%,50%_100%,0%_75%,0%_25%)]"
                                        style={`background-color: ${color};`}
                                    />
                                </div>
                            </div>
                        )
                    }
                    <div
                        class="text-xl text-white drop-shadow-[0_1px_3px_rgba(0,0,0,.1)]"
                        transition:name={`date-${id}`}
                    >
                        <Dates start={start} end={end} />
                    </div>
                    <h1
                        class="sm:pr-56 text-5xl md:text-6xl text-balance text-white drop-shadow-[0_1px_3px_rgba(0,0,0,.1)]"
                        transition:name={`title-${id}`}
                    >
                        {title}
                    </h1>
                </div>
            </div>
            <div
                class="bg-primary h-4 [clip-path:polygon(0_0,_100%_0,_100%_0,_0%_100%)]"
                style={`background-color: ${color};`}
            >
            </div>
            <div
                class="py-4 space-y-4 border-b"
                style={`border-color: ${color};`}
            >
                <div
                    class="w-full max-w-6xl mx-auto px-4 sm:pr-56 flex flex-col sm:flex-row flex-wrap gap-3"
                >
                    {
                        location && (
                            <a
                                href="#map"
                                class="flex items-center gap-2 hover:text-primary transition-colors"
                                onmouseover={`this.style.color='${color}'`}
                                onmouseout={`this.style.color='inherit'`}
                                transition:name={`location-${id}`}
                            >
                                <svg
                                    xmlns="http://www.w3.org/2000/svg"
                                    width="24"
                                    height="24"
                                    viewBox="0 0 24 24"
                                    fill="none"
                                    stroke="currentColor"
                                    stroke-width="2"
                                    stroke-linecap="round"
                                    stroke-linejoin="round"
                                >
                                    <>
                                        <path
                                            stroke="none"
                                            d="M0 0h24v24H0z"
                                            fill="none"
                                        />
                                        <path d="M9 11a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
                                        <path d="M17.657 16.657l-4.243 4.243a2 2 0 0 1 -2.827 0l-4.244 -4.243a8 8 0 1 1 11.314 0z" />
                                    </>
                                </svg>
                                <span class="max-sm:truncate max-sm:max-w-xs">
                                    {location}
                                </span>
                            </a>
                        )
                    }
                    {
                        url && (
                            <a
                                href={url}
                                target="_blank"
                                rel="noopener noreferrer"
                                class="flex items-center gap-2 hover:text-primary transition-colors"
                                onmouseover={`this.style.color='${color}'`}
                                onmouseout={`this.style.color='inherit'`}
                            >
                                <svg
                                    xmlns="http://www.w3.org/2000/svg"
                                    width="24"
                                    height="24"
                                    viewBox="0 0 24 24"
                                    fill="none"
                                    stroke="currentColor"
                                    stroke-width="2"
                                    stroke-linecap="round"
                                    stroke-linejoin="round"
                                >
                                    <>
                                        <path
                                            stroke="none"
                                            d="M0 0h24v24H0z"
                                            fill="none"
                                        />
                                        <path d="M9 15l6 -6" />
                                        <path d="M11 6l.463 -.536a5 5 0 0 1 7.071 7.072l-.534 .464" />
                                        <path d="M13 18l-.397 .534a5.068 5.068 0 0 1 -7.127 0a4.972 4.972 0 0 1 0 -7.071l.524 -.463" />
                                    </>
                                </svg>
                                {new URL(url).hostname.replace("www.", "")}
                            </a>
                        )
                    }
                    {
                        email && (
                            <a
                                href={`mailto:${email}`}
                                class="flex items-center gap-2 hover:text-primary transition-colors"
                                onmouseover={`this.style.color='${color}'`}
                                onmouseout={`this.style.color='inherit'`}
                            >
                                <svg
                                    xmlns="http://www.w3.org/2000/svg"
                                    width="24"
                                    height="24"
                                    viewBox="0 0 24 24"
                                    fill="none"
                                    stroke="currentColor"
                                    stroke-width="2"
                                    stroke-linecap="round"
                                    stroke-linejoin="round"
                                >
                                    <>
                                        <path
                                            stroke="none"
                                            d="M0 0h24v24H0z"
                                            fill="none"
                                        />
                                        <path d="M3 7a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-10z" />
                                        <path d="M3 7l9 6l9 -6" />
                                    </>
                                </svg>
                                {email}
                            </a>
                        )
                    }
                    <button
                        class="flex items-center gap-2 hover:text-primary transition-colors cursor-pointer"
                        onclick={`navigator.share({ title: '${title}', url: window.location.href })`}
                        onmouseover={`this.style.color='${color}'`}
                        onmouseout={`this.style.color='inherit'`}
                    >
                        <svg
                            xmlns="http://www.w3.org/2000/svg"
                            width="24"
                            height="24"
                            viewBox="0 0 24 24"
                            fill="none"
                            stroke="currentColor"
                            stroke-width="2"
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            ><path stroke="none" d="M0 0h24v24H0z" fill="none"
                            ></path><path
                                d="M6 12m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0"
                            ></path><path
                                d="M18 6m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0"
                            ></path><path
                                d="M18 18m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0"
                            ></path><path d="M8.7 10.7l6.6 -3.4"></path><path
                                d="M8.7 13.3l6.6 3.4"></path></svg
                        >
                        Compartir
                    </button>
                    <button
                        class="flex items-center gap-2 hover:text-primary transition-colors cursor-pointer"
                        onclick={`addToFavorites('${id}')`}
                        onmouseover={`this.style.color='${color}'`}
                        onmouseout={`this.style.color='inherit'`}
                    >
                        <svg
                            xmlns="http://www.w3.org/2000/svg"
                            width="24"
                            height="24"
                            viewBox="0 0 24 24"
                            fill="none"
                            stroke="currentColor"
                            stroke-width="2"
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            ><path stroke="none" d="M0 0h24v24H0z" fill="none"
                            ></path><path
                                d="M19.5 12.572l-7.5 7.428l-7.5 -7.428a5 5 0 1 1 7.5 -6.566a5 5 0 1 1 7.5 6.572"
                            ></path></svg
                        >
                        AÃ±adir a favoritos
                    </button>
                    <script is:inline>
                        function addToFavorites(eventId) {
                            let favorites =
                                JSON.parse(localStorage.getItem("favorites")) ||
                                [];
                            if (favorites.includes(eventId)) {
                                favorites = favorites.filter(
                                    (fav) => fav !== eventId,
                                );
                                // alert("Evento eliminado de favoritos");
                            } else {
                                favorites.push(eventId);
                                // alert("Evento aÃ±adido a favoritos");
                            }
                            localStorage.setItem(
                                "favorites",
                                JSON.stringify(favorites),
                            );
                        }
                    </script>
                </div>
            </div>
            <div
                class="content w-full max-w-6xl mx-auto py-6 px-4 sm:pr-56 space-y-4"
            >
                <slot />
                <section class="flex flex-wrap items-center gap-2 mb-6">
                    <AddToCalendarButton
                        client:only
                        label="AÃ±adir al calendario"
                        language="es"
                        name={title}
                        options="'Apple','Google','iCal','Outlook.com','Yahoo'"
                        location={location}
                        startDate={start.toISOString().split("T")[0]}
                        endDate={end?.toISOString().split("T")[0]}
                        startTime={startTime}
                        endTime={endTime}
                        timeZone="Europe/Madrid"
                    />
                </section>
            </div>
            {
                location && (
                    <iframe
                        id="map"
                        width="100%"
                        class="h-96"
                        loading="lazy"
                        allowfullscreen
                        referrerpolicy="no-referrer-when-downgrade"
                        src={`https://www.google.com/maps/embed/v1/place?key=${API_KEY}&q=${encodeURIComponent(location)}`}
                    />
                )
            }
        </article>
    </main>
    <Footer />
</Layout>

<style is:inline>
    .content a {
        text-decoration: underline;
    }
</style>
